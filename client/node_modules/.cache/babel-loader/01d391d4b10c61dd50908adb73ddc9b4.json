{"ast":null,"code":"import _defineProperty from \"/Users/akanksha/Documents/personalProjects/todo-application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_ALL_BUCKETS, CREATE_NEW_BUCKET } from './buckets.types';\nconst INITIAL_STATE = {\n  bucketList: [],\n  activeBucket: ''\n};\n\nconst bucketReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case GET_ALL_BUCKETS:\n      return _objectSpread({}, state, {\n        bucketList: action.payload\n      });\n\n    case CREATE_NEW_BUCKET:\n      return _objectSpread({}, state, {\n        bucketList: [action.payload, ...state.bucketList]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default bucketReducer;","map":{"version":3,"sources":["/Users/akanksha/Documents/personalProjects/todo-application/client/src/redux/buckets/buckets.reducer.js"],"names":["GET_ALL_BUCKETS","CREATE_NEW_BUCKET","INITIAL_STATE","bucketList","activeBucket","bucketReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,eAAT,EAA0BC,iBAA1B,QAAmD,iBAAnD;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,EADQ;AAEpBC,EAAAA,YAAY,EAAE;AAFM,CAAtB;;AAKA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,eAAL;AACE,+BACKM,KADL;AAEEH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAFrB;;AAIF,SAAKR,iBAAL;AACE,+BACKK,KADL;AAEEH,QAAAA,UAAU,EAAE,CACVI,MAAM,CAACE,OADG,EAEV,GAAGH,KAAK,CAACH,UAFC;AAFd;;AAOF;AACE,aAAOG,KAAP;AAfJ;AAiBD,CAlBD;;AAoBA,eAAeD,aAAf","sourcesContent":["import { GET_ALL_BUCKETS, CREATE_NEW_BUCKET } from './buckets.types';\n\nconst INITIAL_STATE = {\n  bucketList: [],\n  activeBucket: '',\n}\n\nconst bucketReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case GET_ALL_BUCKETS:\n      return{\n        ...state,\n        bucketList: action.payload\n      }\n    case CREATE_NEW_BUCKET:\n      return{\n        ...state,\n        bucketList: [\n          action.payload,\n          ...state.bucketList,\n        ]\n      }\n    default:\n      return state;\n  }\n}\n\nexport default bucketReducer;"]},"metadata":{},"sourceType":"module"}