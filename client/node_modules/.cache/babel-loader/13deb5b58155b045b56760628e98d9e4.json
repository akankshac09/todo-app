{"ast":null,"code":"import axios from 'axios';\nimport { GET_ALL_BUCKETS, CREATE_NEW_BUCKET } from './buckets.types';\n\nconst fetchAllBuckets = () => dispatch => {\n  axios({\n    url: 'http://localhost:5000/api/buckets',\n    method: 'get'\n  }).then(res => {\n    dispatch({\n      type: GET_ALL_BUCKETS,\n      payload: res.data\n    });\n  });\n};\n\nconst createNewBucket = bucketName => dispatch => {\n  axios({\n    url: 'buckets',\n    method: 'post',\n    data: {\n      name: bucketName\n    }\n  }).then(res => {\n    dispatch({\n      type: CREATE_NEW_BUCKET,\n      payload: res.data\n    });\n  });\n};\n\nexport { fetchAllBuckets, createNewBucket };","map":{"version":3,"sources":["/Users/akanksha/Documents/personalProjects/todo-application/client/src/redux/buckets/buckets.action.js"],"names":["axios","GET_ALL_BUCKETS","CREATE_NEW_BUCKET","fetchAllBuckets","dispatch","url","method","then","res","type","payload","data","createNewBucket","bucketName","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,iBAAnD;;AAEA,MAAMC,eAAe,GAAG,MAAOC,QAAD,IAAc;AAC1CJ,EAAAA,KAAK,CAAC;AACJK,IAAAA,GAAG,EAAE,mCADD;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GAAD,CAAL,CAGGC,IAHH,CAGSC,GAAD,IAAS;AACfJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAER,eADC;AAEPS,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GARD;AAUD,CAXD;;AAaA,MAAMC,eAAe,GAAIC,UAAD,IAAiBT,QAAD,IAAc;AACpDJ,EAAAA,KAAK,CAAC;AACJK,IAAAA,GAAG,EAAE,SADD;AAEJC,IAAAA,MAAM,EAAE,MAFJ;AAGJK,IAAAA,IAAI,EAAE;AACJG,MAAAA,IAAI,EAAED;AADF;AAHF,GAAD,CAAL,CAMGN,IANH,CAMSC,GAAD,IAAS;AACfJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEP,iBADC;AAEPQ,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GAXD;AAYD,CAbD;;AAeA,SACER,eADF,EAEES,eAFF","sourcesContent":["import axios from 'axios';\n\nimport { GET_ALL_BUCKETS, CREATE_NEW_BUCKET } from './buckets.types';\n\nconst fetchAllBuckets = () => (dispatch) => {\n  axios({\n    url: 'http://localhost:5000/api/buckets',\n    method: 'get',\n  }).then((res) => {\n    dispatch({\n      type: GET_ALL_BUCKETS,\n      payload: res.data\n    })\n  })\n\n}\n\nconst createNewBucket = (bucketName) => (dispatch) => {\n  axios({\n    url: 'buckets',\n    method: 'post',\n    data: {\n      name: bucketName\n    }\n  }).then((res) => {\n    dispatch({\n      type: CREATE_NEW_BUCKET,\n      payload: res.data\n    })\n  })\n}\n\nexport {\n  fetchAllBuckets,\n  createNewBucket\n}"]},"metadata":{},"sourceType":"module"}